version: '3'

services:
  fpm:
    build:
      dockerfile: docker/prod/fpm/Dockerfile
      context: .
      args:
        - BASE_FPM_IMAGE=${BASE_FPM_IMAGE}
    image: akeneo-docker-fpm
    container_name: akeneo-docker-fpm
    volumes:
      - 'web-media-cache:/srv/pim/web/media/cache'
    networks:
      - akeneo

  mysql:
    image: 'mysql:5.7'
    container_name: akeneo-docker-mysql
    environment:
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD}'
      MYSQL_USER: '${MYSQL_USER}'
      MYSQL_PASSWORD: '${MYSQL_PASSWORD}'
      MYSQL_DATABASE: '${MYSQL_DATABASE}'
    volumes:
      - 'mysql-data:/var/lib/mysql'
    networks:
      - akeneo

  db-tasks:
    build:
      dockerfile: docker/prod/db/Dockerfile
      context: .
    image: akeneo-docker-db-tasks
    container_name: akeneo-docker-db-tasks
    networks:
      - akeneo

  httpd:
    build:
      dockerfile: docker/prod/httpd/Dockerfile
      context: .
      args:
        - BASE_SECRET_WEBSERVER_IMAGE=${BASE_SECRET_WEBSERVER_IMAGE}
    image: akeneo-docker-httpd
    container_name: akeneo-docker-httpd
    ports:
      - '${DOCKER_PORT_HTTP}:80'
    volumes:
      - 'web-media-cache:/srv/pim/web/media/cache:ro'
    networks:
      - akeneo

  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.4'
    container_name: akeneo-docker-elasticsearch
    environment:
      ES_JAVA_OPTS: '${ES_JAVA_OPTS:--Xms512m -Xmx512m}'
      discovery.type: 'single-node'
    volumes:
      - 'es-data:/usr/share/elasticsearch/data'
    networks:
      - akeneo

volumes:
  web-media-cache:
  mysql-data:
  es-data:

networks:
  akeneo:
